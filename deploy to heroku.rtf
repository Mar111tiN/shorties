{\rtf1\ansi\ansicpg1252\cocoartf1671\cocoasubrtf200
{\fonttbl\f0\fswiss\fcharset0 Helvetica-Bold;\f1\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\b\fs26 \cf0 Deploy via Heroku
\f1\b0\fs24 \
\
- add required files (top level):\
	runtime.txt						file states the interpreter for your scripts\
		\'97> 	python-3.7.2	\
	requirements.txt					can be prepared from pip freeze\
	Procfile						sets the heroku Dyno to use\
		\'97>  	web: uswgi uwsgi.ini 		Dyno of type web to run uswgi with the .ini file					\
\

\f0\b \ul uswgi
\f1\b0 \ulnone 								you do not have to have it installed locally\
	-add required file uwsgi.ini\
		\'97> 	[uwsgi]				section tag\
			http-socket = :$(PORT)		reads port from heroku configuration\
			master = true				use master process\
			die-on-term = true			frozen workers restart\
			module = app:app			in the module app.py we use variable app\
			memory-report = true		for logging\
\

\f0\b PostgreSQL
\f1\b0 \
	if you have a postgreSQL module installed in Heroku you have the DATABASE_URL env set\
\
	\
\
- push to GitHub repository\
\
-create project in Heroku\
\
- connect to GitHub repository\
\
- add buildpack for python					\
\
- deploy via the Github master branch\
\
- use Heroko Command line for logging error\
	- install Heroku CLI for MAC\
	- restart terminal\
	$ heroku login				should start a browser where you can login to heroku\
	$ heroku logs -a APP_NAME		enters the log file\
	}